Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

 Example 1:
Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.

Example 2:
Input: height = [1,1]
Output: 1

//Code for thics problem

public int maxArea(int[] height) {
        int max = 0;
        int i = 0;
        int j = height.length-1;

           while(i<j){
            int minHeight = Math.min(height[i],height[j]);
            int area = minHeight * (j-i);
            if(area > max){
                max = area;
            }
            if(height[i]<height[j]){
                i++;
            }
            else{
                j--;
            }
        }
        return max;
    }
 
