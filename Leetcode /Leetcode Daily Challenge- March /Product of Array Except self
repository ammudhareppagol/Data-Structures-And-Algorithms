Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

 

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]


// Code for the problem

public int[] productExceptSelf(int[] ar) {
        int len = ar.length;
         int prod = 1, zerosCount = 0;
        int[] result = new int[len];
        Arrays.fill(result, 0);
        for (int number : ar) {
            if (number == 0) {
                zerosCount++;
                continue;
            }
            prod *= number;
        }
        if (zerosCount == 1) {
            for (int i = 0; i < len; i++) {
                result[i] = ar[i] == 0 ? prod : 0;
            }
        } else if (zerosCount == 0) {
            for (int i = 0; i < len; i++) {
                result[i] = prod / ar[i];
            }
        }

        return result;
    }
