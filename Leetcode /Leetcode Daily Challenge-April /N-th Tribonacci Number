The Tribonacci sequence Tn is defined as follows: 

T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.

Given n, return the value of Tn.

Example 1:
Input: n = 4
Output: 4
Explanation:
T_3 = 0 + 1 + 1 = 2
T_4 = 1 + 1 + 2 = 4

Example 2:
Input: n = 25
Output: 1389537

// Code for this problem 
public int tribonacci(int n) {
        Map<Integer, Integer> memo = new HashMap<>();
        return solve(n, memo);
    }
    private int solve(int n, Map<Integer, Integer>memo){
        if(memo.containsKey(n)){
            return memo.get(n);
        }
        int ans;
        if(n==0){
            ans = 0;
        }
        else if(n==1 || n==2){
            ans = 1;
        }
         else{
            ans = solve(n-1, memo)+solve(n-2, memo)+solve(n-3, memo);
        }
        memo.put(n, ans);
        return ans;
    }
